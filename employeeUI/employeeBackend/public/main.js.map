{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/body/body.component.css","webpack:///./src/app/body/body.component.html","webpack:///./src/app/body/body.component.ts","webpack:///./src/app/employee-add/employee-add.component.css","webpack:///./src/app/employee-add/employee-add.component.html","webpack:///./src/app/employee-add/employee-add.component.ts","webpack:///./src/app/employee-list/employee-list.component.css","webpack:///./src/app/employee-list/employee-list.component.html","webpack:///./src/app/employee-list/employee-list.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/interface/employeeItem.ts","webpack:///./src/app/router.items.ts","webpack:///./src/app/services/employee-rest.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\r\\n\\r\\n<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\r\\n  <app-header></app-header>\\r\\n  <h1>\\r\\n    Welcome to {{ title }}!\\r\\n  </h1>\\r\\n  <div class=\\\"outlet\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  <app-footer></app-footer>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'employeeUI';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { BodyComponent } from './body/body.component';\r\nimport { AppRoutingModule } from './router.items';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { EmployeeAddComponent } from './employee-add/employee-add.component';\r\nimport { FormsModule }   from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    BodyComponent,\r\n    EmployeeListComponent,\r\n    EmployeeAddComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule, AppRoutingModule,FormsModule, HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n  <a routerLink=\\\"/employeeList\\\">\\r\\n    <span class=\\\"badge\\\">EmplyeeList</span> \\r\\n  </a>\\r\\n  <a routerLink=\\\"/addEmployee\\\">\\r\\n    <span class=\\\"badge\\\">AddEmployee</span> \\r\\n  </a>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-body',\r\n  templateUrl: './body.component.html',\r\n  styleUrls: ['./body.component.css']\r\n})\r\nexport class BodyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".setInput {\\r\\n    margin: 1px;\\r\\n}\\r\\n\\r\\n.input-validation {\\r\\n  margin: 5px 3px;\\r\\n  padding: 0px !important;  \\r\\n}\"","module.exports = \"\\r\\n<p>Employee-Add Form <a routerLink=\\\"/\\\"> <span class=\\\"badge\\\">Home</span> </a></p>\\r\\n\\r\\n<form #editForm=\\\"ngForm\\\">\\r\\n\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t<div class=\\\"col-xs-3 setInput\\\">\\r\\n\\t\\t\\t<label for=\\\"userId\\\">User ID</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userId\\\"\\r\\n\\t\\t\\t\\t\\trequired [(ngModel)]=\\\"model.userId\\\" name=\\\"userId\\\"\\r\\n\\t\\t\\t\\t\\t#userId=\\\"ngModel\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div [hidden]=\\\"!userId.errors?.required || !userId.touched || !userId.pristine\\\" \\r\\n\\t\\t\\tclass=\\\"alert alert-danger input-validation\\\"> userId is required\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-xs-3 setInput\\\">\\r\\n\\t\\t\\t<label for=\\\"jobTitleName\\\">JobTitle Name</label>\\r\\n\\t\\t\\t<input class=\\\"form-control\\\" id=\\\"jobTitleName\\\" required\\r\\n\\t\\t\\t[(ngModel)]=\\\"model.jobTitleName\\\"\\r\\n\\t\\t\\t\\tname=\\\"jobTitleName\\\" #jobTitleName=\\\"ngModel\\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t<div [hidden]=\\\"!jobTitleName.errors?.required || !jobTitleName.touched\\\" \\r\\n\\t\\t\\tclass=\\\"alert alert-danger input-validation\\\"> jobTitleName is required\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-xs-3 setInput\\\">\\r\\n\\t\\t\\t<label for=\\\"firstName\\\">First Name</label>\\r\\n\\t\\t\\t<input class=\\\"form-control\\\" id=\\\"firstName\\\" type=\\\"text\\\" required\\r\\n\\t\\t\\t[(ngModel)]=\\\"model.firstName\\\"\\r\\n\\t\\t\\t\\tname=\\\"firstName\\\" #firstName=\\\"ngModel\\\">\\r\\n\\r\\n\\t\\t\\t<div [hidden]=\\\"!firstName.errors?.required || !firstName.touched\\\" \\r\\n\\t\\t\\tclass=\\\"alert alert-danger input-validation\\\"> firstName is required\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t<div class=\\\"col-xs-3 setInput\\\">\\r\\n\\t\\t\\t<label for=\\\"lastName\\\">Last Name</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\"\\r\\n\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\t[(ngModel)]=\\\"model.lastName\\\" name=\\\"lastName\\\"\\r\\n\\t\\t\\t\\t\\t#lastName=\\\"ngModel\\\">\\r\\n\\r\\n\\t\\t\\t<div [hidden]=\\\"!lastName.errors?.required || !lastName.touched\\\" \\r\\n\\t\\t\\t\\tclass=\\\"alert alert-danger input-validation\\\"> LastName is required\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-xs-3 setInput\\\">\\r\\n\\t\\t\\t<label for=\\\"preferredFullName\\\">Preferred FullName </label>\\r\\n\\t\\t\\t<input class=\\\"form-control\\\" id=\\\"preferredFullName\\\" type=\\\"text\\\" \\r\\n\\t\\t\\trequired\\r\\n\\t\\t\\t[(ngModel)]=\\\"model.preferredFullName\\\"\\r\\n\\t\\t\\t\\tname=\\\"preferredFullName\\\" #preferredFullName=\\\"ngModel\\\">\\r\\n\\r\\n\\t\\t\\t<div [hidden]=\\\"!preferredFullName.errors?.required || !preferredFullName.touched\\\" \\r\\n\\t\\t\\t\\tclass=\\\"alert alert-danger input-validation\\\"> Preferred FullName is required\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-xs-3 setInput\\\">\\r\\n\\t\\t\\t<label for=\\\"employeeCode\\\">Employee Code</label>\\r\\n\\t\\t\\t<input class=\\\"form-control\\\" id=\\\"employeeCode\\\" required \\r\\n\\t\\t\\t[(ngModel)]=\\\"model.employeeCode\\\"\\r\\n\\t\\t\\ttype=\\\"text\\\" name=\\\"employeeCode\\\" [disabled]=\\\"isEdit\\\" #employeeCode=\\\"ngModel\\\">\\r\\n\\r\\n\\t\\t\\t<div [hidden]=\\\"!employeeCode.errors?.required || !employeeCode.touched\\\" \\r\\n\\t\\t\\t\\tclass=\\\"alert alert-danger input-validation\\\"> Employee Code is required\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t<div class=\\\"col-xs-3 setInput\\\">\\r\\n\\t\\t\\t<label for=\\\"userId\\\">Region</label>\\r\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"region\\\"\\r\\n\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\t[(ngModel)]=\\\"model.region\\\" name=\\\"region\\\"\\r\\n\\t\\t\\t\\t\\t#region=\\\"ngModel\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t<div [hidden]=\\\"!region.errors?.required || !region.touched\\\" \\r\\n\\t\\t\\t\\tclass=\\\"alert alert-danger input-validation\\\"> Region is required\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-xs-3 setInput\\\">\\r\\n\\t\\t\\t<label for=\\\"phoneNumber\\\">Phone Number</label>\\r\\n\\t\\t\\t<input class=\\\"form-control\\\" id=\\\"phoneNumber\\\" type=\\\"text\\\" required\\r\\n\\t\\t\\t\\t[(ngModel)]=\\\"model.phoneNumber\\\" name=\\\"phoneNumber\\\"\\r\\n\\t\\t\\t\\t#phoneNumber=\\\"ngModel\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div [hidden]=\\\"!phoneNumber.errors?.required || !phoneNumber.touched\\\" \\r\\n\\t\\t\\t\\tclass=\\\"alert alert-danger input-validation\\\"> Phone Number is required\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-xs-3 setInput\\\">\\r\\n\\t\\t\\t<label for=\\\"emailAddress\\\">Email Address</label>\\r\\n\\t\\t\\t<input class=\\\"form-control\\\" id=\\\"emailAddress\\\" type=\\\"text\\\" required\\r\\n\\t\\t\\t\\t[(ngModel)]=\\\"model.emailAddress\\\" name=\\\"emailAddress\\\"\\r\\n\\t\\t\\t#emailAddress=\\\"ngModel\\\">\\r\\n\\t\\t\\t<div [hidden]=\\\"!emailAddress.errors?.required || !emailAddress.touched\\\" \\r\\n\\t\\t\\t\\tclass=\\\"alert alert-danger input-validation\\\"> Email Address is required\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<button style=\\\"margin:0 20px;\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\" \\r\\n\\t\\t\\t[disabled]=\\\"!editForm.form.valid\\\" (click)=\\\"addORUpdate(editForm)\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t{{buttonText}}\\r\\n\\t</button>\\r\\n\\t\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel(editForm)\\\">\\r\\n\\t\\tCancel\\r\\n\\t</button>\\r\\n\\r\\n\\r\\n</form>\\r\\n\\r\\n\"","import { EmployeeRestService } from './../services/employee-rest.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { employeeItem } from './../interface/employeeItem';\r\nimport { ActivatedRoute ,Router } from '@angular/router'; \r\nimport { Subscription,Observable, of } from 'rxjs';\r\n\r\n@Component({\r\n\tselector: 'app-employee-add',\r\n\ttemplateUrl: './employee-add.component.html',\r\n\tstyleUrls: ['./employee-add.component.css']\r\n})\r\n\r\nexport class EmployeeAddComponent implements OnInit, OnDestroy {\r\n\r\n\tempCode: string;\r\n\tprivate subscription: Subscription;\r\n\tprivate updatesubscription: Subscription;\r\n\r\n\tmodel:any ;\r\n\tisEdit: Boolean = false;\r\n\tempSubscibe: Subscription;\r\n\tbuttonText: string = \"Add Employee\";\r\n\trouteP:Subscription;\r\n\r\n\tconstructor(private router:Router, private activatedRoute: ActivatedRoute, \r\n\t\tprivate empS :EmployeeRestService) { \r\n\t\t\r\n\t}\r\n\r\n\r\n\tngOnInit() {\r\n\t\tlet currentUrl = this.router.url;\r\n\t\tconsole.log(currentUrl);\r\n\t\tif (currentUrl === '/addEmployee') {\r\n\t\t\t// this.isEdit = false;\r\n\t\t\t// this.buttonText = \"Add Employee\";\r\n\t\t\tthis.model = {};\r\n\t\t} else {\r\n\t\t\tthis.routeP = this.activatedRoute.params.subscribe( params => {\r\n\t\t\t\tconsole.log(params);\r\n\t\t\t\tconsole.log(JSON.stringify(params));\r\n\t\t\t\tthis.empCode = params.id;\r\n\t\t\t\tthis.subscription = this.empS.getEmployee(this.empCode).subscribe((data: {}) => {\r\n\t\t\t\t\tconsole.log(data, \"get Employee::::\");\r\n\t\t\t\t\tlet emp = data[0];\r\n\t\t\t\t\tlet employee = new employeeItem(emp.userId,\r\n\t\t\t\t\t\temp.jobTitleName,\r\n\t\t\t\t\t\temp.firstName,\r\n\t\t\t\t\t\temp.lastName,\r\n\t\t\t\t\t\temp.preferredFullName,\r\n\t\t\t\t\t\temp.employeeCode,\r\n\t\t\t\t\t\temp.region,\r\n\t\t\t\t\t\temp.phoneNumber,\r\n\t\t\t\t\t\temp.emailAddress\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.model = employee;\r\n\t\t\t\t\tthis.isEdit = true;\r\n\t\t\t\t\tthis.buttonText = \"Update\";\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\taddORUpdate(editForm) {\r\n\t\tconsole.log(editForm.controls);\r\n\t\tlet formAttr = [] ;\r\n\t\t\r\n\t\tlet emp = new employeeItem(editForm.controls.userId.value,\r\n\t\t\t\t\teditForm.controls.jobTitleName.value,\r\n\t\t\t\t\teditForm.controls.firstName.value,\r\n\t\t\t\t\teditForm.controls.lastName.value,\r\n\t\t\t\t\teditForm.controls.preferredFullName.value,\r\n\t\t\t\t\teditForm.controls.employeeCode.value,\r\n\t\t\t\t\teditForm.controls.region.value,\r\n\t\t\t\t\teditForm.controls.phoneNumber.value,\r\n\t\t\t\t\teditForm.controls.emailAddress.value);\r\n\t\t\r\n\t\t// \t\t\tconsole.log(emp, \">>>>>\")\r\n\t\t// let normalEmp = {  userId: editForm.controls.userId.value,\r\n\t\t// \tjobTitleName:   editForm.controls.jobTitleName.value,\r\n\t\t// \t  firstName: editForm.controls.firstName.value,\r\n\t\t//    lastName:    editForm.controls.lastName.value,\r\n\t\t//    preferredFullName:    editForm.controls.preferredFullName.value,\r\n\t\t// \temployeeCode:   editForm.controls.employeeCode.value,\r\n\t\t// \t region:  editForm.controls.region.value,\r\n\t\t// \tphoneNumber:   editForm.controls.phoneNumber.value,\r\n\t\t// \temailAddress:   editForm.controls.emailAddress.value};\r\n\t\tif (this.isEdit) {\r\n\t\t\tthis.updatesubscription = this.empS.updateEmployee(this.empCode, emp).subscribe((data: {}) => {\r\n\t\t\t\tthis.router.navigate([\"/employeeList\"]);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.subscription = this.empS.addEmployee(emp).subscribe((data: {}) => {\r\n\t\t\t\tthis.router.navigate([\"/employeeList\"]);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tcancel(editForm) {\r\n\t\teditForm.reset();\r\n\t\r\n\t\tif (this.isEdit)\r\n\t\t\tthis.router.navigate([\"/employeeList\"]);\r\n\t\telse\r\n\t\t\tthis.router.navigate([\"/\"]);\r\n\t}\r\n\r\n\r\n\tngOnDestroy() {\r\n\t\t//this.subscription.unsubscribe();\r\n\t\t//this.routeP.unsubscribe();\r\n\t}\r\n}\r\n","module.exports = \".redClass {\\r\\n    color: red;\\r\\n    font-size: 10px;\\r\\n    font-style: italic;\\r\\n}\"","module.exports = \"<div class=\\\"text-small\\\">\\r\\n  employee-list works! \\r\\n  <a routerLink=\\\"/\\\">\\r\\n    <span class=\\\"badge\\\">Home</span> \\r\\n  </a>\\r\\n  <table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>userId</th>\\r\\n        <th>jobTitleName</th>\\r\\n        <th>firstName</th>\\r\\n        <th>lastName</th>\\r\\n        <th>preferredFullName</th>\\r\\n        <th>employeeCode</th>\\r\\n        <th>region</th>\\r\\n        <th>phoneNumber</th>\\r\\n        <th>emailAddress</th>\\r\\n        <th>Action</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of employeeList\\\">\\r\\n        <td>{{item.userId}}</td>\\r\\n        <td>{{item.jobTitleName}}</td>\\r\\n        <td>{{item.firstName}}</td>\\r\\n        <td>{{item.lastName}}</td>\\r\\n        <td>{{item.preferredFullName}}</td>\\r\\n        <td>{{item.employeeCode}}</td>\\r\\n        <td>{{item.region}}</td>\\r\\n        <td>{{item.phoneNumber}}</td>\\r\\n        <td>{{item.emailAddress}}</td>\\r\\n        <td> <a routerLink=\\\"/employee/{{item.employeeCode}}\\\">\\r\\n          <span class=\\\"badge\\\">Edit</span> \\r\\n        </a> <a style=\\\"cursor: pointer;\\\" (click)=\\\"deleteEmployee(item.employeeCode)\\\">\\r\\n          <span class=\\\"badge redClass\\\">Delete</span> \\r\\n        </a></td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Utility } from './../util/utility';\r\nimport { EmployeeRestService } from './../services/employee-rest.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription,Observable, of } from 'rxjs';\r\n\r\n@Component({\r\n\tselector: 'app-employee-list',\r\n\ttemplateUrl: './employee-list.component.html',\r\n\tstyleUrls: ['./employee-list.component.css']\r\n})\r\n\r\nexport class EmployeeListComponent implements OnInit, OnDestroy {\r\n\r\n\temployeeList: any = [];\r\n\r\n\temListSubscibe: Subscription;\r\n\temDeletetSubscibe: Subscription;\r\n\tconstructor(private empS :EmployeeRestService) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.getEmployees();\r\n\t}\r\n\r\n\tgetEmployees() {\r\n\t\tthis.employeeList = [];\r\n\t\tthis.emListSubscibe = this.empS.getEmployeeList().subscribe((data: {}) => {\r\n\t\t\tthis.employeeList = data;\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteEmployee(empCode) {\r\n\t\tthis.emDeletetSubscibe = this.empS.deleteEmployeeDetails(empCode).subscribe((data: {}) => {\r\n\t\t\tthis.employeeList= this.employeeList.filter(item => item.employeeCode !== empCode);     \r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\t//this.emListSubscibe.unsubscribe();\r\n\t\t//this.emDeletetSubscibe.unsubscribe();\r\n\t}\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-default\\\">\\r\\n  <div class=\\\"panel-body\\\">A Basic Footer</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-default\\\">\\r\\n  <div class=\\\"panel-body\\\">A Basic Header</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export class employeeItem {\r\n    userId:string;\r\n    jobTitleName:string;\r\n    firstName:string;\r\n    lastName:string;\r\n    preferredFullName:string;\r\n    employeeCode:string;\r\n    region:string;\r\n    phoneNumber:string;\r\n    emailAddress:string;\r\n\r\n    //constructor() {}\r\n\r\n    constructor(userId:string, jobTitleName:string,\r\n        firstName:string, lastName:string, preferredFullName:string,\r\n        employeeCode:string, region:string, phoneNumber:string, emailAddress:string) {\r\n            \r\n        this.userId = userId;\r\n        this.jobTitleName = jobTitleName;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.preferredFullName = preferredFullName;\r\n        this.employeeCode = employeeCode;\r\n        this.region = region;\r\n        this.phoneNumber = phoneNumber;\r\n        this.emailAddress = emailAddress;\r\n    }\r\n\r\n}","import { EmployeeListComponent } from './employee-list/employee-list.component';\r\n\r\nimport { EmployeeAddComponent } from './employee-add/employee-add.component';\r\nimport { BodyComponent } from './body/body.component';\r\n\r\n\r\n  import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n//\r\n//import { BodyComponent } from './app.BodyComponent';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: BodyComponent },\r\n    { path: 'employeeList', component: EmployeeListComponent },\r\n    { path: 'employee/:id', component: EmployeeAddComponent },\r\n    //{ path: 'employeeDelete/:id', component: EmployeeDeleteComponent },\r\n    { path: 'addEmployee', component: EmployeeAddComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\n\r\nexport class AppRoutingModule {\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeRestService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // const endpoint = 'http://localhost:3000/api/v1/';\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type':  'application/json'\r\n    })\r\n  };\r\n\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || { };\r\n  }\r\n\r\n  getEmployeeList(): Observable<any> {\r\n    return this.http.get('employeesList').pipe(\r\n      map(this.extractData));\r\n  }\r\n  \r\n  getEmployee(id): Observable<any> {\r\n    return this.http.get( 'employee/' + id).pipe(\r\n      map(this.extractData));\r\n  }\r\n  \r\n  addEmployee (employee): Observable<any> {\r\n    console.log(employee);\r\n    return this.http.post<any>( 'employee', JSON.stringify(employee), this.httpOptions).pipe(\r\n      tap((product) => console.log(`added employee w/ id=${employee.employeeCode}`)),\r\n      catchError(this.handleError<any>('addEmployee'))\r\n    );\r\n  }\r\n  \r\n  updateEmployee (id, employee): Observable<any> {\r\n    return this.http.put( 'employee/' + id, JSON.stringify(employee), this.httpOptions).pipe(\r\n      tap(_ => console.log(`updated employee id=${id}`)),\r\n      catchError(this.handleError<any>('updateEmployee'))\r\n    );\r\n  }\r\n  \r\n  deleteEmployeeDetails (id): Observable<any> {\r\n    return this.http.delete<any>( 'employee/' + id, this.httpOptions).pipe(\r\n      tap(_ => console.log(`deleted employee id=${id}`)),\r\n      catchError(this.handleError<any>('deleteEmployee'))\r\n    );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n  \r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n  \r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n  \r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}